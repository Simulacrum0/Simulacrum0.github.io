#==============================================================
#--------------------------------------------------------------
# WANTVERSE DATABASE TEXT FORMAT
# *.v.txt
# Design to rapidly ingest sloppy notes, curated values, and export-import for legibility.
# Goals are clearly defined spec for reproducible results, ease of use for human editing, and utilizing feature needs as a database.
#
# Covers VALID INI Files and extends with arrays as 'Lists' with user selected prefix for stack push/pop and list entries with a simple Name:
#
#--------------------------------------------------------------
# Every line has exactly 1 Entry that is a valid C99 name meaning ASCII A-Z, a-z, 0-9, and underscore.
# All Entries are 'text' ( Value to be converted based on type of matched name such as Numbers, Dates, Known-Qualities, FileReferences (for binary blobs instead of BASE64),  )
#
# Entries are always 1 of 4 types: Records, Traits, Lists, or Values
# Records are a collection of unique Traits
# Lists are a collection of Entries
# Traits are Key-Value Pairs where the value is an entry
#
# The Parser keeps a stack of 'item-markers' to decide when a series of list items ends and either pops up to a parent list or
# item_marker includes spaces/tabs and non-letter 'item-bullet' characters [ -, +, *, ~ ]

# [BRACKETS] define absolute Object Entries, including A.B.C hierarchies
# LIST:
# item_marker LIST_ITEM: VALUE
# once the pattern of item_marker changes, whatever that pattern is, we go back to
# ENTRY_TRAIT: VALUE
#
#
# Follows INI rules for [ Object ] then newline Trait: Value or Trait=Value as strings to be converted
# Nested Arrays simply add dots to the name inside brackets [ Scene.Location.Entity.XYZ ]
# Listed Arrays follow a trait with a newline following the colon LIST:
# and then each newline is a value until a new [ DBS.slot ] is added
#
# date --iso-8601=seconds
# Timefmt is YYYY-MM-DDTHH:MM:SS+TZ or no TZ for local time
# BASH: date +"%Y-%m-%dT%H:%M:%S%z"
# note that the 'Z' is not preceded by a '%' (or a colon) â€“ it is a literal 'Z'
# LOCAL_Te: 2025-05-13T16:10:34-0400
# date -u = UTC
# UTC_Te: 2025-05-13T20:10:43+0000
#
#==============================================================

[RECORD_1]
Trait_1: A single name
Trait_2: "  Use quotes for a Big long line that starts and ends with space   "
Trait_3 = 1950.07.22

LIST_1:
- A: first item in list
- B: below we'll start a new item that is a list too
- C:
	+ C1: As long as the 'space/tab/special-separator characters' are different before first non-space/non-bullet [ -, *, +, ~ ], then if the same as last entry, we pop the stack otherwise we save current list on the stack and record this prefix to start another.
	+ C2
	+ C3
- D
- E:

[RECORD_2]
Trait_5: RECORD_1
Trait_6: Notice above trait references an ID of a Record from earlier
